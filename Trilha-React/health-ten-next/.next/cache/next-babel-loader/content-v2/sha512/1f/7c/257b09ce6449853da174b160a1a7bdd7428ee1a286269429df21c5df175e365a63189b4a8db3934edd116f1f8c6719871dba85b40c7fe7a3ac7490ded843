{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"D:/Projetos Rocketseat/NLW-4-REACT-NODE/Trilha-React/health-ten-next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\Projetos Rocketseat\\\\NLW-4-REACT-NODE\\\\Trilha-React\\\\health-ten-next\\\\src\\\\components\\\\Countdown.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport styles from '../styles/components/Countdown.module.css';\nvar countdownTimeout;\nexport function Countdown() {\n  _s();\n\n  var _useState = useState(0.05 * 60),\n      time = _useState[0],\n      setTime = _useState[1];\n\n  var _useState2 = useState(false),\n      isActive = _useState2[0],\n      setIsActive = _useState2[1];\n\n  var _useState3 = useState(false),\n      hasFinished = _useState3[0],\n      setHasFineshd = _useState3[1];\n\n  var minutes = Math.floor(time / 60);\n  var seconds = time % 60; //se a string so conter um caracter, pega o começo e add o 0 (padStart) depois divide (.split(''))\n\n  var _String$padStart$spli = String(minutes).padStart(2, '0').split(''),\n      _String$padStart$spli2 = _slicedToArray(_String$padStart$spli, 2),\n      minuteLeft = _String$padStart$spli2[0],\n      minuteRigth = _String$padStart$spli2[1];\n\n  var _String$padStart$spli3 = String(seconds).padStart(2, '0').split(''),\n      _String$padStart$spli4 = _slicedToArray(_String$padStart$spli3, 2),\n      secondLeft = _String$padStart$spli4[0],\n      secondRigth = _String$padStart$spli4[1];\n\n  function resetCountdown() {\n    clearTimeout(countdownTimeout);\n    setIsActive(false);\n    setTime(0.05 * 60);\n  }\n\n  function startCountdown() {\n    setIsActive(true);\n  }\n\n  useEffect(function () {\n    if (isActive && time > 0) {\n      countdownTimeout = setTimeout(function () {\n        setTime(time - 1);\n      }, 1000);\n    } else if (isActive && time == 0) {\n      console.log('finalizou');\n      setHasFineshd(true);\n      setIsActive(false);\n    }\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRigth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRigth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), hasFinished ? /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: true,\n      className: styles.countdownButton,\n      children: \"Ciclo encerrado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this) : isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"\".concat(styles.countdownButton, \" \").concat(styles.countdownButtonStop),\n      onClick: resetCountdown,\n      children: \"Abandonar ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: styles.countdownButton,\n      onClick: startCountdown,\n      children: \"Iniciar um ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Countdown, \"IJkNuJPOO+KUrRb1PVxF0QhMBMA=\");\n\n_c = Countdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"sources":["D:/Projetos Rocketseat/NLW-4-REACT-NODE/Trilha-React/health-ten-next/src/components/Countdown.tsx"],"names":["useState","useEffect","styles","countdownTimeout","Countdown","time","setTime","isActive","setIsActive","hasFinished","setHasFineshd","minutes","Math","floor","seconds","String","padStart","split","minuteLeft","minuteRigth","secondLeft","secondRigth","resetCountdown","clearTimeout","startCountdown","setTimeout","console","log","countdownContainer","countdownButton","countdownButtonStop"],"mappings":"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","sourcesContent":["import { useState,useEffect } from 'react';\r\nimport styles from '../styles/components/Countdown.module.css';\r\n\r\nlet countdownTimeout: NodeJS.Timeout;\r\n\r\nexport function Countdown() {\r\n    const [time,setTime] = useState(0.05 * 60);\r\n    const [isActive,setIsActive] = useState(false);\r\n    const [hasFinished, setHasFineshd] = useState(false);\r\n\r\n    const minutes = Math.floor(time / 60);\r\n    const seconds = time % 60;\r\n\r\n    //se a string so conter um caracter, pega o começo e add o 0 (padStart) depois divide (.split(''))\r\n    const [minuteLeft,minuteRigth] = String(minutes).padStart(2,'0').split('');\r\n    const [secondLeft,secondRigth] = String(seconds).padStart(2,'0').split('');\r\n\r\n\r\n    function resetCountdown(){\r\n\r\n        clearTimeout(countdownTimeout);\r\n        setIsActive(false);\r\n        setTime(0.05 * 60);\r\n\r\n    }\r\n\r\n\r\n\r\n    function startCountdown(){\r\n        setIsActive(true)\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(isActive && time > 0){\r\n                countdownTimeout = setTimeout(()=>{\r\n                setTime(time - 1);\r\n            }, 1000)\r\n        }else if(isActive && time == 0){\r\n            console.log('finalizou');\r\n            setHasFineshd(true);\r\n            setIsActive(false);\r\n        }\r\n        \r\n    }, [isActive,time])\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.countdownContainer}>\r\n\r\n                <div>\r\n                    <span>{minuteLeft}</span>\r\n                    <span>{minuteRigth}</span>\r\n                </div>\r\n                <span>:</span>\r\n                <div>\r\n                    <span>{secondLeft}</span>\r\n                    <span>{secondRigth}</span>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n            { hasFinished ? (\r\n            \r\n                <button \r\n                disabled\r\n                className={styles.countdownButton}              \r\n                >\r\n                   Ciclo encerrado                    \r\n                  \r\n                </button>\r\n            \r\n            ) : (\r\n          \r\n\r\n             isActive ? (\r\n                <button \r\n                type=\"button\"\r\n                className={`${styles.countdownButton} ${styles.countdownButtonStop}`}\r\n                onClick={resetCountdown}\r\n                >\r\n                   Abandonar ciclo\r\n                    \r\n                  \r\n                </button>\r\n            ) : (\r\n\r\n                <button \r\n                    type=\"button\"\r\n                    className={styles.countdownButton}\r\n                    onClick={startCountdown}\r\n                >\r\n                    Iniciar um ciclo\r\n                    \r\n                  \r\n                </button>\r\n            )\r\n            \r\n            )}\r\n\r\n        </div>\r\n\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}