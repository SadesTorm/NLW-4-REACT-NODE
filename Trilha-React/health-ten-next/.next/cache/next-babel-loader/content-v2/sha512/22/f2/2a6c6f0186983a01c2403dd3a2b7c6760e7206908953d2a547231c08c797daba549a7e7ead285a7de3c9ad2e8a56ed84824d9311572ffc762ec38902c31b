{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Projetos Rocketseat\\\\NLW-4-REACT-NODE\\\\Trilha-React\\\\health-ten-next\\\\src\\\\contexts\\\\ChallengesContext.tsx\";\nimport { createContext, useState } from 'react';\nimport challenges from '../../challenges.json';\ninterface;\nexport const ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider({\n  children\n}) {\n  const {\n    0: level,\n    1: setLevel\n  } = useState(1);\n  const {\n    0: currentExperience,\n    1: setCurrentExperience\n  } = useState(0);\n  const {\n    0: challengeCompleted,\n    1: setChallengeCompleted\n  } = useState(0);\n  const {\n    0: activeChallenge,\n    1: setActiveChallenge\n  } = useState(null);\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  function startNewChallenge() {\n    console.log('new challeng');\n    const randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    const challenge = challenges[randomChallengeIndex];\n    setActiveChallenge(challenge);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level,\n      levelUp,\n      currentExperience,\n      challengeCompleted,\n      startNewChallenge,\n      activeChallenge\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["D:/Projetos Rocketseat/NLW-4-REACT-NODE/Trilha-React/health-ten-next/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","challenges","interface","ChallengesContext","ChallengesProvider","children","level","setLevel","currentExperience","setCurrentExperience","challengeCompleted","setChallengeCompleted","activeChallenge","setActiveChallenge","levelUp","startNewChallenge","console","log","randomChallengeIndex","Math","floor","random","length","challenge"],"mappings":";;AAAA,SAASA,aAAT,EAAmCC,QAAnC,QAAkD,OAAlD;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AAEAC,SAAS;AAeT,OAAO,MAAMC,iBAAiB,gBAAGJ,aAAa,CAAC,EAAD,CAAvC;AAGP,OAAO,SAASK,kBAAT,CAA6B;AAAEC,EAAAA;AAAF,CAA7B,EAAqE;AAExE,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBP,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM;AAAA,OAACQ,iBAAD;AAAA,OAAoBC;AAApB,MAA4CT,QAAQ,CAAC,CAAD,CAA1D;AACA,QAAM;AAAA,OAACU,kBAAD;AAAA,OAAqBC;AAArB,MAA8CX,QAAQ,CAAC,CAAD,CAA5D;AAEA,QAAM;AAAA,OAACY,eAAD;AAAA,OAAiBC;AAAjB,MAAuCb,QAAQ,CAAC,IAAD,CAArD;;AAEA,WAASc,OAAT,GAAkB;AACdP,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACH;;AAED,WAASS,iBAAT,GAA4B;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,UAAMC,oBAAoB,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAepB,UAAU,CAACqB,MAArC,CAA7B;AACA,UAAMC,SAAS,GAAGtB,UAAU,CAACiB,oBAAD,CAA5B;AAEAL,IAAAA,kBAAkB,CAACU,SAAD,CAAlB;AACH;;AAKD,sBACI,QAAC,iBAAD,CAAmB,QAAnB;AACA,IAAA,KAAK,EAAG;AACAjB,MAAAA,KADA;AAEAQ,MAAAA,OAFA;AAGAN,MAAAA,iBAHA;AAIAE,MAAAA,kBAJA;AAKAK,MAAAA,iBALA;AAMAH,MAAAA;AANA,KADR;AAAA,cAWKP;AAXL;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH","sourcesContent":["import { createContext, ReactNode, useState }from 'react';\r\nimport challenges from '../../challenges.json';\r\n\r\ninterface \r\n\r\ninterface ChallengesContextData{\r\n    level: number;\r\n    levelUp: () => void;\r\n    currentExperience: number;\r\n    challengeCompleted: number;\r\n    startNewChallenge: () => void; \r\n    activeChallenge      \r\n}\r\n\r\ninterface ChallengesProviderProps{\r\n    children: ReactNode\r\n}\r\n\r\nexport const ChallengesContext = createContext({} as ChallengesContextData);\r\n\r\n\r\nexport function ChallengesProvider( { children } : ChallengesProviderProps ){\r\n\r\n    const [level, setLevel] = useState(1);\r\n    const [currentExperience, setCurrentExperience] = useState(0);\r\n    const [challengeCompleted, setChallengeCompleted] = useState(0);\r\n\r\n    const [activeChallenge,setActiveChallenge] = useState(null);\r\n\r\n    function levelUp(){\r\n        setLevel(level + 1 );\r\n    }\r\n\r\n    function startNewChallenge(){\r\n        console.log('new challeng');\r\n        const randomChallengeIndex = Math.floor(Math.random()* challenges.length);\r\n        const challenge = challenges[randomChallengeIndex];\r\n        \r\n        setActiveChallenge(challenge);\r\n    }\r\n\r\n\r\n\r\n\r\n    return(\r\n        <ChallengesContext.Provider \r\n        value={ {\r\n                level,\r\n                levelUp,\r\n                currentExperience,\r\n                challengeCompleted,\r\n                startNewChallenge,   \r\n                activeChallenge            \r\n            } }\r\n        \r\n        >\r\n            {children}\r\n        </ChallengesContext.Provider>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}