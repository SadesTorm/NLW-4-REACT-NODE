{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Projetos Rocketseat\\\\NLW-4-REACT-NODE\\\\Trilha-React\\\\health-ten-next\\\\src\\\\components\\\\Countdown.tsx\";\nimport { useState, useEffect } from 'react';\nimport styles from '../styles/components/Countdown.module.css';\nexport function Countdown() {\n  const {\n    0: time,\n    1: setTime\n  } = useState(25 * 60);\n  const {\n    0: isActive,\n    1: setIsActive\n  } = useState(false);\n  const minutes = Math.floor(time / 60);\n  const seconds = time % 60; //se a string so conter um caracter, pega o começo e add o 0 (padStart) depois divide (.split(''))\n\n  const [minuteLeft, minuteRigth] = String(minutes).padStart(2, '0').split('');\n  const [secondLeft, secondRigth] = String(seconds).padStart(2, '0').split('');\n\n  function resetCountdown() {\n    setIsActive(false);\n  }\n\n  function startCountdown() {\n    setIsActive(true);\n  }\n\n  useEffect(() => {\n    if (isActive && time > 0) {\n      setTimeout(() => {\n        setTime(time - 1);\n      }, 1000);\n    }\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRigth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRigth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: `${styles.countdownButton} ${styles.countdownButtonStop}`,\n      onClick: resetCountdown,\n      children: \"Abandonar ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: styles.countdownButton,\n      onClick: startCountdown,\n      children: \"Iniciar um ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["D:/Projetos Rocketseat/NLW-4-REACT-NODE/Trilha-React/health-ten-next/src/components/Countdown.tsx"],"names":["useState","useEffect","styles","Countdown","time","setTime","isActive","setIsActive","minutes","Math","floor","seconds","minuteLeft","minuteRigth","String","padStart","split","secondLeft","secondRigth","resetCountdown","startCountdown","setTimeout","countdownContainer","countdownButton","countdownButtonStop"],"mappings":";;AAAA,SAASA,QAAT,EAAkBC,SAAlB,QAAmC,OAAnC;AACA,OAAOC,MAAP,MAAmB,2CAAnB;AAGA,OAAO,SAASC,SAAT,GAAqB;AACxB,QAAM;AAAA,OAACC,IAAD;AAAA,OAAMC;AAAN,MAAiBL,QAAQ,CAAC,KAAK,EAAN,CAA/B;AACA,QAAM;AAAA,OAACM,QAAD;AAAA,OAAUC;AAAV,MAAyBP,QAAQ,CAAC,KAAD,CAAvC;AAEA,QAAMQ,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWN,IAAI,GAAG,EAAlB,CAAhB;AACA,QAAMO,OAAO,GAAGP,IAAI,GAAG,EAAvB,CALwB,CAOxB;;AACA,QAAM,CAACQ,UAAD,EAAYC,WAAZ,IAA2BC,MAAM,CAACN,OAAD,CAAN,CAAgBO,QAAhB,CAAyB,CAAzB,EAA2B,GAA3B,EAAgCC,KAAhC,CAAsC,EAAtC,CAAjC;AACA,QAAM,CAACC,UAAD,EAAYC,WAAZ,IAA2BJ,MAAM,CAACH,OAAD,CAAN,CAAgBI,QAAhB,CAAyB,CAAzB,EAA2B,GAA3B,EAAgCC,KAAhC,CAAsC,EAAtC,CAAjC;;AAGA,WAASG,cAAT,GAAyB;AAErBZ,IAAAA,WAAW,CAAC,KAAD,CAAX;AAEH;;AAID,WAASa,cAAT,GAAyB;AACrBb,IAAAA,WAAW,CAAC,IAAD,CAAX;AAEH;;AAEDN,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGK,QAAQ,IAAIF,IAAI,GAAG,CAAtB,EAAwB;AACpBiB,MAAAA,UAAU,CAAC,MAAI;AACXhB,QAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACH,OAFS,EAEP,IAFO,CAAV;AAGH;AACJ,GANQ,EAMN,CAACE,QAAD,EAAUF,IAAV,CANM,CAAT;AAQA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEF,MAAM,CAACoB,kBAAvB;AAAA,8BAEI;AAAA,gCACI;AAAA,oBAAOV;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAA,gCACI;AAAA,oBAAOI;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAeMZ,QAAQ,gBACN;AACA,MAAA,IAAI,EAAC,QADL;AAEA,MAAA,SAAS,EAAG,GAAEJ,MAAM,CAACqB,eAAgB,IAAGrB,MAAM,CAACsB,mBAAoB,EAFnE;AAGA,MAAA,OAAO,EAAEL,cAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADM,gBAYN;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,SAAS,EAAEjB,MAAM,CAACqB,eAFtB;AAGI,MAAA,OAAO,EAAEH,cAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA3BR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0CH","sourcesContent":["import { useState,useEffect } from 'react';\r\nimport styles from '../styles/components/Countdown.module.css';\r\n\r\n\r\nexport function Countdown() {\r\n    const [time,setTime] = useState(25 * 60);\r\n    const [isActive,setIsActive] = useState(false);\r\n\r\n    const minutes = Math.floor(time / 60);\r\n    const seconds = time % 60;\r\n\r\n    //se a string so conter um caracter, pega o começo e add o 0 (padStart) depois divide (.split(''))\r\n    const [minuteLeft,minuteRigth] = String(minutes).padStart(2,'0').split('');\r\n    const [secondLeft,secondRigth] = String(seconds).padStart(2,'0').split('');\r\n\r\n\r\n    function resetCountdown(){\r\n\r\n        setIsActive(false);\r\n        \r\n    }\r\n\r\n\r\n\r\n    function startCountdown(){\r\n        setIsActive(true)\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(isActive && time > 0){\r\n            setTimeout(()=>{\r\n                setTime(time - 1);\r\n            }, 1000)\r\n        }\r\n    }, [isActive,time])\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.countdownContainer}>\r\n\r\n                <div>\r\n                    <span>{minuteLeft}</span>\r\n                    <span>{minuteRigth}</span>\r\n                </div>\r\n                <span>:</span>\r\n                <div>\r\n                    <span>{secondLeft}</span>\r\n                    <span>{secondRigth}</span>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            { isActive ? (\r\n                <button \r\n                type=\"button\"\r\n                className={`${styles.countdownButton} ${styles.countdownButtonStop}`}\r\n                onClick={resetCountdown}\r\n                >\r\n                   Abandonar ciclo\r\n                    \r\n                  \r\n                </button>\r\n            ) : (\r\n\r\n                <button \r\n                    type=\"button\"\r\n                    className={styles.countdownButton}\r\n                    onClick={startCountdown}\r\n                >\r\n                    Iniciar um ciclo\r\n                    \r\n                  \r\n                </button>\r\n            )}\r\n\r\n        </div>\r\n\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}