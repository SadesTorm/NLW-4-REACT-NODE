{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"D:/Projetos Rocketseat/NLW-4-REACT-NODE/Trilha-React/health-ten-next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"D:/Projetos Rocketseat/NLW-4-REACT-NODE/Trilha-React/health-ten-next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"D:\\\\Projetos Rocketseat\\\\NLW-4-REACT-NODE\\\\Trilha-React\\\\health-ten-next\\\\src\\\\contexts\\\\ChallengesContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from 'react';\nimport Cookies from 'js-cookie';\nimport challenges from '../../challenges.json';\nimport { LevelUpModal } from '../components/LevelUpModal';\nexport var ChallengesContext = /*#__PURE__*/createContext({});\n/*\r\nrest = (rest operator ) \r\nobjetivo=> pegar todo o resto da propriedade e utilizar em rest (como se fosse um objeto)\r\n*/\n\nexport function ChallengesProvider(_ref) {\n  _s();\n\n  var _rest$level, _rest$currentExperien, _rest$challengeComple;\n\n  var children = _ref.children,\n      rest = _objectWithoutProperties(_ref, [\"children\"]);\n\n  var _useState = useState((_rest$level = rest.level) !== null && _rest$level !== void 0 ? _rest$level : 1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState((_rest$currentExperien = rest.currentExperience) !== null && _rest$currentExperien !== void 0 ? _rest$currentExperien : 0),\n      currentExperience = _useState2[0],\n      setCurrentExperience = _useState2[1];\n\n  var _useState3 = useState((_rest$challengeComple = rest.challengeCompleted) !== null && _rest$challengeComple !== void 0 ? _rest$challengeComple : 0),\n      challengeCompleted = _useState3[0],\n      setChallengeCompleted = _useState3[1];\n\n  var _useState4 = useState(null),\n      activeChallenge = _useState4[0],\n      setActiveChallenge = _useState4[1];\n\n  var _ref2,\n      _ref3 = _slicedToArray(_ref2, 1),\n      isLevelUpModalOpen = _ref3[0]; // calculo de level baseado no calculo de rpg\n\n\n  var experienceToNextLevel = Math.pow((level + 1) * 4, 2); // array vazio a function e executada apaenas uma vez quando componete for exibido em tela\n\n  useEffect(function () {\n    Notification.requestPermission();\n  }, []);\n  useEffect(function () {\n    Cookies.set('level', String(level));\n    Cookies.set('currentExperience', String(currentExperience));\n    Cookies.set('challengeCompleted', String(challengeCompleted));\n  }, [level, currentExperience, challengeCompleted]);\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  function startNewChallenge() {\n    console.log('new challeng');\n    var randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    var challenge = challenges[randomChallengeIndex];\n    new Audio('/notification.mp3').play();\n\n    if (Notification.permission === 'granted') {\n      new Notification('Novo desafio', {\n        body: \"Valendo \".concat(challenge.amount, \"xp!\")\n      });\n    }\n\n    setActiveChallenge(challenge);\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completedChallenge() {\n    if (!activeChallenge) {\n      return;\n    }\n\n    var amount = activeChallenge.amount;\n    var finalExperience = currentExperience + amount;\n\n    if (finalExperience >= experienceToNextLevel) {\n      finalExperience = finalExperience - experienceToNextLevel;\n      levelUp();\n    }\n\n    setCurrentExperience(finalExperience);\n    setActiveChallenge(null);\n    setChallengeCompleted(challengeCompleted + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level: level,\n      levelUp: levelUp,\n      currentExperience: currentExperience,\n      challengeCompleted: challengeCompleted,\n      startNewChallenge: startNewChallenge,\n      activeChallenge: activeChallenge,\n      resetChallenge: resetChallenge,\n      experienceToNextLevel: experienceToNextLevel,\n      completedChallenge: completedChallenge\n    },\n    children: [children, /*#__PURE__*/_jsxDEV(LevelUpModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChallengesProvider, \"XFu+vye8HWLoKZjbSmiFH0Aay38=\");\n\n_c = ChallengesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesProvider\");","map":{"version":3,"sources":["D:/Projetos Rocketseat/NLW-4-REACT-NODE/Trilha-React/health-ten-next/src/contexts/ChallengesContext.tsx"],"names":["createContext","useEffect","useState","Cookies","challenges","LevelUpModal","ChallengesContext","ChallengesProvider","children","rest","level","setLevel","currentExperience","setCurrentExperience","challengeCompleted","setChallengeCompleted","activeChallenge","setActiveChallenge","isLevelUpModalOpen","experienceToNextLevel","Math","pow","Notification","requestPermission","set","String","levelUp","startNewChallenge","console","log","randomChallengeIndex","floor","random","length","challenge","Audio","play","permission","body","amount","resetChallenge","completedChallenge","finalExperience"],"mappings":";;;;;;;AAAA,SAASA,aAAT,EAAmCC,SAAnC,EAA8CC,QAA9C,QAA8D,OAA9D;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,SAASC,YAAT,QAA6B,4BAA7B;AA6BA,OAAO,IAAMC,iBAAiB,gBAAGN,aAAa,CAAC,EAAD,CAAvC;AAEP;AACA;AACA;AACA;;AACA,OAAO,SAASO,kBAAT,OAA4E;AAAA;;AAAA;;AAAA,MAA9CC,QAA8C,QAA9CA,QAA8C;AAAA,MAAjCC,IAAiC;;AAAA,kBAErDP,QAAQ,gBAACO,IAAI,CAACC,KAAN,qDAAe,CAAf,CAF6C;AAAA,MAExEA,KAFwE;AAAA,MAEjEC,QAFiE;;AAAA,mBAG7BT,QAAQ,0BAACO,IAAI,CAACG,iBAAN,yEAA2B,CAA3B,CAHqB;AAAA,MAGxEA,iBAHwE;AAAA,MAGrDC,oBAHqD;;AAAA,mBAI3BX,QAAQ,0BAACO,IAAI,CAACK,kBAAN,yEAA4B,CAA5B,CAJmB;AAAA,MAIxEA,kBAJwE;AAAA,MAIpDC,qBAJoD;;AAAA,mBAOjCb,QAAQ,CAAC,IAAD,CAPyB;AAAA,MAOxEc,eAPwE;AAAA,MAOvDC,kBAPuD;;AAAA;AAAA;AAAA,MAQxEC,kBARwE,aAU/E;;;AACA,MAAMC,qBAAqB,GAAGC,IAAI,CAACC,GAAL,CAAS,CAACX,KAAK,GAAG,CAAT,IAAc,CAAvB,EAA0B,CAA1B,CAA9B,CAX+E,CAa/E;;AACAT,EAAAA,SAAS,CAAC,YAAM;AACZqB,IAAAA,YAAY,CAACC,iBAAb;AACH,GAFQ,EAEN,EAFM,CAAT;AAIAtB,EAAAA,SAAS,CAAC,YAAM;AAEZE,IAAAA,OAAO,CAACqB,GAAR,CAAY,OAAZ,EAAqBC,MAAM,CAACf,KAAD,CAA3B;AACAP,IAAAA,OAAO,CAACqB,GAAR,CAAY,mBAAZ,EAAiCC,MAAM,CAACb,iBAAD,CAAvC;AACAT,IAAAA,OAAO,CAACqB,GAAR,CAAY,oBAAZ,EAAkCC,MAAM,CAACX,kBAAD,CAAxC;AAEH,GANQ,EAMN,CAACJ,KAAD,EAAQE,iBAAR,EAA2BE,kBAA3B,CANM,CAAT;;AAUA,WAASY,OAAT,GAAmB;AACff,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACH;;AAED,WAASiB,iBAAT,GAA6B;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,QAAMC,oBAAoB,GAAGV,IAAI,CAACW,KAAL,CAAWX,IAAI,CAACY,MAAL,KAAgB5B,UAAU,CAAC6B,MAAtC,CAA7B;AACA,QAAMC,SAAS,GAAG9B,UAAU,CAAC0B,oBAAD,CAA5B;AAEA,QAAIK,KAAJ,CAAU,mBAAV,EAA+BC,IAA/B;;AACA,QAAId,YAAY,CAACe,UAAb,KAA4B,SAAhC,EAA2C;AACvC,UAAIf,YAAJ,CAAiB,cAAjB,EAAiC;AAC7BgB,QAAAA,IAAI,oBAAaJ,SAAS,CAACK,MAAvB;AADyB,OAAjC;AAGH;;AAEDtB,IAAAA,kBAAkB,CAACiB,SAAD,CAAlB;AAIH;;AAED,WAASM,cAAT,GAA0B;AACtBvB,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH;;AAED,WAASwB,kBAAT,GAA8B;AAC1B,QAAI,CAACzB,eAAL,EAAsB;AAElB;AACH;;AAJyB,QAMlBuB,MANkB,GAMPvB,eANO,CAMlBuB,MANkB;AAQ1B,QAAIG,eAAe,GAAG9B,iBAAiB,GAAG2B,MAA1C;;AAEA,QAAIG,eAAe,IAAIvB,qBAAvB,EAA8C;AAC1CuB,MAAAA,eAAe,GAAGA,eAAe,GAAGvB,qBAApC;AACAO,MAAAA,OAAO;AACV;;AAEDb,IAAAA,oBAAoB,CAAC6B,eAAD,CAApB;AACAzB,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAF,IAAAA,qBAAqB,CAACD,kBAAkB,GAAG,CAAtB,CAArB;AAEH;;AAKD,sBACI,QAAC,iBAAD,CAAmB,QAAnB;AACI,IAAA,KAAK,EAAE;AACHJ,MAAAA,KAAK,EAALA,KADG;AAEHgB,MAAAA,OAAO,EAAPA,OAFG;AAGHd,MAAAA,iBAAiB,EAAjBA,iBAHG;AAIHE,MAAAA,kBAAkB,EAAlBA,kBAJG;AAKHa,MAAAA,iBAAiB,EAAjBA,iBALG;AAMHX,MAAAA,eAAe,EAAfA,eANG;AAOHwB,MAAAA,cAAc,EAAdA,cAPG;AAQHrB,MAAAA,qBAAqB,EAArBA,qBARG;AASHsB,MAAAA,kBAAkB,EAAlBA;AATG,KADX;AAAA,eAcKjC,QAdL,eAeI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;;GAjGeD,kB;;KAAAA,kB","sourcesContent":["import { createContext, ReactNode, useEffect, useState } from 'react';\r\nimport Cookies from 'js-cookie'\r\nimport challenges from '../../challenges.json';\r\nimport { LevelUpModal } from '../components/LevelUpModal';\r\n\r\n\r\ninterface Challenge {\r\n    type: 'body' | 'yey';\r\n    description: string;\r\n    amount: number;\r\n}\r\n\r\ninterface ChallengesContextData {\r\n    level: number;\r\n    levelUp: () => void;\r\n    currentExperience: number;\r\n    challengeCompleted: number;\r\n    startNewChallenge: () => void;\r\n    activeChallenge: Challenge;\r\n    resetChallenge: () => void;\r\n    experienceToNextLevel: number;\r\n    completedChallenge: () => void;\r\n}\r\n\r\ninterface ChallengesProviderProps {\r\n    children: ReactNode\r\n    level: number,\r\n    currentExperience: number,\r\n    challengeCompleted: number\r\n\r\n}\r\n\r\nexport const ChallengesContext = createContext({} as ChallengesContextData);\r\n\r\n/*\r\nrest = (rest operator ) \r\nobjetivo=> pegar todo o resto da propriedade e utilizar em rest (como se fosse um objeto)\r\n*/\r\nexport function ChallengesProvider({ children, ...rest }: ChallengesProviderProps) {\r\n\r\n    const [level, setLevel] = useState(rest.level ?? 1);\r\n    const [currentExperience, setCurrentExperience] = useState(rest.currentExperience ?? 0);\r\n    const [challengeCompleted, setChallengeCompleted] = useState(rest.challengeCompleted ?? 0);\r\n\r\n\r\n    const [activeChallenge, setActiveChallenge] = useState(null);\r\n    const [isLevelUpModalOpen,] \r\n\r\n    // calculo de level baseado no calculo de rpg\r\n    const experienceToNextLevel = Math.pow((level + 1) * 4, 2);\r\n\r\n    // array vazio a function e executada apaenas uma vez quando componete for exibido em tela\r\n    useEffect(() => {\r\n        Notification.requestPermission();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        Cookies.set('level', String(level));\r\n        Cookies.set('currentExperience', String(currentExperience));\r\n        Cookies.set('challengeCompleted', String(challengeCompleted));\r\n\r\n    }, [level, currentExperience, challengeCompleted])\r\n\r\n\r\n\r\n    function levelUp() {\r\n        setLevel(level + 1);\r\n    }\r\n\r\n    function startNewChallenge() {\r\n        console.log('new challeng');\r\n        const randomChallengeIndex = Math.floor(Math.random() * challenges.length);\r\n        const challenge = challenges[randomChallengeIndex];\r\n\r\n        new Audio('/notification.mp3').play();\r\n        if (Notification.permission === 'granted') {\r\n            new Notification('Novo desafio', {\r\n                body: `Valendo ${challenge.amount}xp!`\r\n            })\r\n        }\r\n\r\n        setActiveChallenge(challenge);\r\n\r\n\r\n\r\n    }\r\n\r\n    function resetChallenge() {\r\n        setActiveChallenge(null);\r\n    }\r\n\r\n    function completedChallenge() {\r\n        if (!activeChallenge) {\r\n\r\n            return;\r\n        }\r\n\r\n        const { amount } = activeChallenge;\r\n\r\n        let finalExperience = currentExperience + amount;\r\n\r\n        if (finalExperience >= experienceToNextLevel) {\r\n            finalExperience = finalExperience - experienceToNextLevel;\r\n            levelUp();\r\n        }\r\n\r\n        setCurrentExperience(finalExperience);\r\n        setActiveChallenge(null);\r\n        setChallengeCompleted(challengeCompleted + 1);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <ChallengesContext.Provider\r\n            value={{\r\n                level,\r\n                levelUp,\r\n                currentExperience,\r\n                challengeCompleted,\r\n                startNewChallenge,\r\n                activeChallenge,\r\n                resetChallenge,\r\n                experienceToNextLevel,\r\n                completedChallenge,\r\n            }}\r\n\r\n        >\r\n            {children}\r\n            <LevelUpModal />\r\n        </ChallengesContext.Provider>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}