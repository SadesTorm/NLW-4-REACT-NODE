{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"D:/Projetos Rocketseat/NLW-4-REACT-NODE/Trilha-React/health-ten-next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\Projetos Rocketseat\\\\NLW-4-REACT-NODE\\\\Trilha-React\\\\health-ten-next\\\\src\\\\components\\\\Countdown.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useContext } from 'react';\nimport { ChallengesContext } from '../contexts/ChallengesContext';\nimport { CowntodownContext } from '../contexts/CountdownContext';\nimport styles from '../styles/components/Countdown.module.css';\nvar countdownTimeout;\nexport function Countdown() {\n  _s();\n\n  var _useContext = useContext(CowntodownContext),\n      resetCountdown = _useContext.resetCountdown; //se a string so conter um caracter, pega o começo e add o 0 (padStart) depois divide (.split(''))\n\n\n  var _String$padStart$spli = String(minutes).padStart(2, '0').split(''),\n      _String$padStart$spli2 = _slicedToArray(_String$padStart$spli, 2),\n      minuteLeft = _String$padStart$spli2[0],\n      minuteRigth = _String$padStart$spli2[1];\n\n  var _String$padStart$spli3 = String(seconds).padStart(2, '0').split(''),\n      _String$padStart$spli4 = _slicedToArray(_String$padStart$spli3, 2),\n      secondLeft = _String$padStart$spli4[0],\n      secondRigth = _String$padStart$spli4[1]; //pegando valores de outros componets\n\n\n  var _useContext2 = useContext(ChallengesContext),\n      startNewChallenge = _useContext2.startNewChallenge;\n  /*function resetCountdown(){\r\n        clearTimeout(countdownTimeout);\r\n      setIsActive(false);\r\n      setTime(0.05 * 60);\r\n    }*/\n\n\n  function startCountdown() {\n    setIsActive(true);\n  }\n\n  useEffect(function () {\n    if (isActive && time > 0) {\n      countdownTimeout = setTimeout(function () {\n        setTime(time - 1);\n      }, 1000);\n    } else if (isActive && time == 0) {\n      console.log('finalizou');\n      setHasFineshd(true);\n      setIsActive(false);\n      startNewChallenge();\n    }\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRigth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRigth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), hasFinished ? /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: true,\n      className: styles.countdownButton,\n      children: \"Ciclo encerrado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this) : isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"\".concat(styles.countdownButton, \" \").concat(styles.countdownButtonStop),\n      onClick: resetCountdown,\n      children: \"Abandonar ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: styles.countdownButton,\n      onClick: startCountdown,\n      children: \"Iniciar um ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Countdown, \"zCK5eyILJSGpPn2SZJFrJBztl78=\");\n\n_c = Countdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"sources":["D:/Projetos Rocketseat/NLW-4-REACT-NODE/Trilha-React/health-ten-next/src/components/Countdown.tsx"],"names":["useEffect","useContext","ChallengesContext","CowntodownContext","styles","countdownTimeout","Countdown","resetCountdown","String","minutes","padStart","split","minuteLeft","minuteRigth","seconds","secondLeft","secondRigth","startNewChallenge","startCountdown","setIsActive","isActive","time","setTimeout","setTime","console","log","setHasFineshd","countdownContainer","hasFinished","countdownButton","countdownButtonStop"],"mappings":"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","sourcesContent":["import { useState,useEffect, useContext } from 'react';\r\nimport { ChallengesContext } from '../contexts/ChallengesContext';\r\nimport { CowntodownContext } from '../contexts/CountdownContext';\r\nimport styles from '../styles/components/Countdown.module.css';\r\n\r\nlet countdownTimeout: NodeJS.Timeout;\r\n\r\nexport function Countdown() {\r\n\r\n    const { resetCountdown } = useContext(CowntodownContext);\r\n    //se a string so conter um caracter, pega o começo e add o 0 (padStart) depois divide (.split(''))\r\n    const [minuteLeft,minuteRigth] = String(minutes).padStart(2,'0').split('');\r\n    const [secondLeft,secondRigth] = String(seconds).padStart(2,'0').split('');\r\n\r\n    //pegando valores de outros componets\r\n    const { startNewChallenge } = useContext(ChallengesContext);\r\n\r\n\r\n    /*function resetCountdown(){\r\n\r\n        clearTimeout(countdownTimeout);\r\n        setIsActive(false);\r\n        setTime(0.05 * 60);\r\n\r\n    }*/\r\n\r\n\r\n\r\n    function startCountdown(){\r\n        setIsActive(true)\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(isActive && time > 0){\r\n                countdownTimeout = setTimeout(()=>{\r\n                setTime(time - 1);\r\n            }, 1000)\r\n        }else if(isActive && time == 0){\r\n            console.log('finalizou');\r\n            setHasFineshd(true);\r\n            setIsActive(false);\r\n            startNewChallenge();\r\n        }\r\n        \r\n    }, [isActive,time])\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.countdownContainer}>\r\n\r\n                <div>\r\n                    <span>{minuteLeft}</span>\r\n                    <span>{minuteRigth}</span>\r\n                </div>\r\n                <span>:</span>\r\n                <div>\r\n                    <span>{secondLeft}</span>\r\n                    <span>{secondRigth}</span>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n            { hasFinished ? (\r\n            \r\n                <button \r\n                disabled\r\n                className={styles.countdownButton}              \r\n                >\r\n                   Ciclo encerrado                    \r\n                  \r\n                </button>\r\n            \r\n            ) : (\r\n          \r\n\r\n             isActive ? (\r\n                <button \r\n                type=\"button\"\r\n                className={`${styles.countdownButton} ${styles.countdownButtonStop}`}\r\n                onClick={resetCountdown}\r\n                >\r\n                   Abandonar ciclo\r\n                    \r\n                  \r\n                </button>\r\n            ) : (\r\n\r\n                <button \r\n                    type=\"button\"\r\n                    className={styles.countdownButton}\r\n                    onClick={startCountdown}\r\n                >\r\n                    Iniciar um ciclo\r\n                    \r\n                  \r\n                </button>\r\n            )\r\n                        \r\n            )}\r\n\r\n        </div>\r\n\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}