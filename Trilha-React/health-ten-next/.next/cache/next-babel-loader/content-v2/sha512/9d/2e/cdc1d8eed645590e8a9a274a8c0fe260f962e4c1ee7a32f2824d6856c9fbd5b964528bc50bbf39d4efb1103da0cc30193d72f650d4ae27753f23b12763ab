{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Projetos Rocketseat\\\\NLW-4-REACT-NODE\\\\Trilha-React\\\\health-ten-next\\\\src\\\\contexts\\\\CountdownContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nexport var CowntodownContext = /*#__PURE__*/createContext({});\nexport function CowntodownProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(false),\n      isActive = _useState[0],\n      setIsActive = _useState[1];\n\n  var _useState2 = useState(0.05 * 60),\n      time = _useState2[0],\n      setTime = _useState2[1];\n\n  var countdownTimeout;\n\n  function resetCountdown() {\n    clearTimeout(countdownTimeout);\n    setIsActive(false);\n    setTime(0.05 * 60);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CowntodownContext.Provider, {\n    value: {\n      resetCountdown: resetCountdown\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CowntodownProvider, \"4mT+s7HwsSqMM4psSUHEV3Whl2k=\");\n\n_c = CowntodownProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CowntodownProvider\");","map":{"version":3,"sources":["D:/Projetos Rocketseat/NLW-4-REACT-NODE/Trilha-React/health-ten-next/src/contexts/CountdownContext.tsx"],"names":["createContext","useState","CowntodownContext","CowntodownProvider","children","isActive","setIsActive","time","setTime","countdownTimeout","resetCountdown","clearTimeout"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAmCC,QAAnC,QAAmD,OAAnD;AAaA,OAAO,IAAMC,iBAAiB,gBAAGF,aAAa,CAAC,EAAD,CAAvC;AAEP,OAAO,SAASG,kBAAT,OAAqE;AAAA;;AAAA,MAAtCC,QAAsC,QAAtCA,QAAsC;;AAAA,kBAErCH,QAAQ,CAAC,KAAD,CAF6B;AAAA,MAE7DI,QAF6D;AAAA,MAEpDC,WAFoD;;AAAA,mBAG7CL,QAAQ,CAAC,OAAO,EAAR,CAHqC;AAAA,MAG7DM,IAH6D;AAAA,MAGxDC,OAHwD;;AAMxE,MAAIC,gBAAJ;;AAIA,WAASC,cAAT,GAAyB;AAErBC,IAAAA,YAAY,CAACF,gBAAD,CAAZ;AACAH,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAE,IAAAA,OAAO,CAAC,OAAO,EAAR,CAAP;AAEH;;AAED,sBACI,QAAC,iBAAD,CAAmB,QAAnB;AACA,IAAA,KAAK,EAAE;AACHE,MAAAA,cAAc,EAAdA;AADG,KADP;AAAA,cAKKN;AALL;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GA3BeD,kB;;KAAAA,kB","sourcesContent":["import { createContext, ReactNode, useState } from \"react\";\r\n\r\ninterface CowntodownContextData{\r\n\r\n    resetCountdown: () => void,\r\n\r\n}\r\n\r\n\r\ninterface CowntodownProviderProps{\r\n    children: ReactNode\r\n}\r\n\r\nexport const CowntodownContext = createContext({} as CowntodownContextData);\r\n\r\nexport function CowntodownProvider( { children } : CowntodownProviderProps ){\r\n    \r\n        const [isActive,setIsActive] = useState(false);\r\n        const [time,setTime] = useState(0.05 * 60);\r\n\r\n    \r\n    let countdownTimeout: NodeJS.Timeout;\r\n\r\n\r\n   \r\n    function resetCountdown(){\r\n\r\n        clearTimeout(countdownTimeout);\r\n        setIsActive(false);\r\n        setTime(0.05 * 60);\r\n\r\n    }\r\n\r\n    return(\r\n        <CowntodownContext.Provider \r\n        value={{\r\n            resetCountdown,\r\n        }}\r\n        >\r\n            {children}\r\n        </CowntodownContext.Provider>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}