{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Projetos Rocketseat\\\\NLW-4-REACT-NODE\\\\Trilha-React\\\\health-ten-next\\\\src\\\\contexts\\\\CountdownContext.tsx\";\nimport { createContext, useState } from \"react\";\nexport const CowntodownContext = /*#__PURE__*/createContext({});\nexport function CowntodownProvider({\n  children\n}) {\n  const {\n    0: time,\n    1: setTime\n  } = useState(0.05 * 60);\n  const {\n    0: isActive,\n    1: setIsActive\n  } = useState(false);\n  const {\n    0: hasFinished,\n    1: setHasFineshd\n  } = useState(false);\n  const minutes = Math.floor(time / 60);\n  const seconds = time % 60;\n  let countdownTimeout;\n\n  function resetCountdown() {\n    clearTimeout(countdownTimeout);\n    setIsActive(false);\n    setTime(0.05 * 60);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CowntodownContext.Provider, {\n    value: {\n      resetCountdown\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["D:/Projetos Rocketseat/NLW-4-REACT-NODE/Trilha-React/health-ten-next/src/contexts/CountdownContext.tsx"],"names":["createContext","useState","CowntodownContext","CowntodownProvider","children","time","setTime","isActive","setIsActive","hasFinished","setHasFineshd","minutes","Math","floor","seconds","countdownTimeout","resetCountdown","clearTimeout"],"mappings":";;AAAA,SAASA,aAAT,EAA+CC,QAA/C,QAA+D,OAA/D;AAaA,OAAO,MAAMC,iBAAiB,gBAAGF,aAAa,CAAC,EAAD,CAAvC;AAEP,OAAO,SAASG,kBAAT,CAA6B;AAAEC,EAAAA;AAAF,CAA7B,EAAqE;AAIxE,QAAM;AAAA,OAACC,IAAD;AAAA,OAAMC;AAAN,MAAiBL,QAAQ,CAAC,OAAO,EAAR,CAA/B;AACA,QAAM;AAAA,OAACM,QAAD;AAAA,OAAUC;AAAV,MAAyBP,QAAQ,CAAC,KAAD,CAAvC;AACA,QAAM;AAAA,OAACQ,WAAD;AAAA,OAAcC;AAAd,MAA+BT,QAAQ,CAAC,KAAD,CAA7C;AAEA,QAAMU,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWR,IAAI,GAAG,EAAlB,CAAhB;AACA,QAAMS,OAAO,GAAGT,IAAI,GAAG,EAAvB;AAMA,MAAIU,gBAAJ;;AAIA,WAASC,cAAT,GAAyB;AAErBC,IAAAA,YAAY,CAACF,gBAAD,CAAZ;AACAP,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAF,IAAAA,OAAO,CAAC,OAAO,EAAR,CAAP;AAEH;;AAED,sBACI,QAAC,iBAAD,CAAmB,QAAnB;AACA,IAAA,KAAK,EAAE;AACHU,MAAAA;AADG,KADP;AAAA,cAKKZ;AALL;AAAA;AAAA;AAAA;AAAA,UADJ;AASH","sourcesContent":["import { createContext, ReactNode, useContext, useState } from \"react\";\r\n\r\ninterface CowntodownContextData{\r\n\r\n    resetCountdown: () => void,\r\n\r\n}\r\n\r\n\r\ninterface CowntodownProviderProps{\r\n    children: ReactNode\r\n}\r\n\r\nexport const CowntodownContext = createContext({} as CowntodownContextData);\r\n\r\nexport function CowntodownProvider( { children } : CowntodownProviderProps ){\r\n\r\n    \r\n    \r\n    const [time,setTime] = useState(0.05 * 60);\r\n    const [isActive,setIsActive] = useState(false);\r\n    const [hasFinished, setHasFineshd] = useState(false);\r\n\r\n    const minutes = Math.floor(time / 60);\r\n    const seconds = time % 60;\r\n\r\n    \r\n    \r\n\r\n    \r\n    let countdownTimeout: NodeJS.Timeout;\r\n\r\n\r\n   \r\n    function resetCountdown(){\r\n\r\n        clearTimeout(countdownTimeout);\r\n        setIsActive(false);\r\n        setTime(0.05 * 60);\r\n\r\n    }\r\n\r\n    return(\r\n        <CowntodownContext.Provider \r\n        value={{\r\n            resetCountdown,\r\n        }}\r\n        >\r\n            {children}\r\n        </CowntodownContext.Provider>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}