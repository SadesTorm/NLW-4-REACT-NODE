{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Projetos Rocketseat\\\\NLW-4-REACT-NODE\\\\Trilha-React\\\\health-ten-next\\\\src\\\\contexts\\\\CountdownContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { ChallengesContext } from \"./ChallengesContext\";\nexport var CowntodownContext = /*#__PURE__*/createContext({});\nexport function CowntodownProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  //pegando valores de outros componets\n  var _useContext = useContext(ChallengesContext),\n      startNewChallenge = _useContext.startNewChallenge;\n\n  var _useState = useState(0.05 * 60),\n      time = _useState[0],\n      setTime = _useState[1];\n\n  var _useState2 = useState(false),\n      isActive = _useState2[0],\n      setIsActive = _useState2[1];\n\n  var _useState3 = useState(false),\n      hasFinished = _useState3[0],\n      setHasFineshd = _useState3[1];\n\n  var minutes = Math.floor(time / 60);\n  var seconds = time % 60;\n  var countdownTimeout;\n\n  function resetCountdown() {\n    clearTimeout(countdownTimeout);\n    setIsActive(false);\n    setTime(0.05 * 60);\n  }\n\n  function startCountdown() {\n    setIsActive(true);\n  }\n\n  useEffect(function () {\n    if (isActive && time > 0) {\n      countdownTimeout = setTimeout(function () {\n        setTime(time - 1);\n      }, 1000);\n    } else if (isActive && time == 0) {\n      console.log('finalizou');\n      setHasFineshd(true);\n      setIsActive(false);\n      startNewChallenge();\n    }\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(CowntodownContext.Provider, {\n    value: {\n      resetCountdown: resetCountdown,\n      startCountdown: startCountdown,\n      useEffect: useEffect\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CowntodownProvider, \"cWScFVAUIY49spZsdh7tZYGAreo=\");\n\n_c = CowntodownProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CowntodownProvider\");","map":{"version":3,"sources":["D:/Projetos Rocketseat/NLW-4-REACT-NODE/Trilha-React/health-ten-next/src/contexts/CountdownContext.tsx"],"names":["createContext","useContext","useEffect","useState","ChallengesContext","CowntodownContext","CowntodownProvider","children","startNewChallenge","time","setTime","isActive","setIsActive","hasFinished","setHasFineshd","minutes","Math","floor","seconds","countdownTimeout","resetCountdown","clearTimeout","startCountdown","setTimeout","console","log"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAmCC,UAAnC,EAA+CC,SAA/C,EAA0DC,QAA1D,QAA0E,OAA1E;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AAaA,OAAO,IAAMC,iBAAiB,gBAAGL,aAAa,CAAC,EAAD,CAAvC;AAEP,OAAO,SAASM,kBAAT,OAAqE;AAAA;;AAAA,MAAtCC,QAAsC,QAAtCA,QAAsC;;AAExE;AAFwE,oBAG1CN,UAAU,CAACG,iBAAD,CAHgC;AAAA,MAGhEI,iBAHgE,eAGhEA,iBAHgE;;AAAA,kBAKjDL,QAAQ,CAAC,OAAO,EAAR,CALyC;AAAA,MAKjEM,IALiE;AAAA,MAK5DC,OAL4D;;AAAA,mBAMzCP,QAAQ,CAAC,KAAD,CANiC;AAAA,MAMjEQ,QANiE;AAAA,MAMxDC,WANwD;;AAAA,mBAOnCT,QAAQ,CAAC,KAAD,CAP2B;AAAA,MAOjEU,WAPiE;AAAA,MAOpDC,aAPoD;;AASxE,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWR,IAAI,GAAG,EAAlB,CAAhB;AACA,MAAMS,OAAO,GAAGT,IAAI,GAAG,EAAvB;AAEA,MAAIU,gBAAJ;;AAEA,WAASC,cAAT,GAAyB;AAErBC,IAAAA,YAAY,CAACF,gBAAD,CAAZ;AACAP,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAF,IAAAA,OAAO,CAAC,OAAO,EAAR,CAAP;AAEH;;AAED,WAASY,cAAT,GAAyB;AACrBV,IAAAA,WAAW,CAAC,IAAD,CAAX;AAEH;;AAEDV,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAGS,QAAQ,IAAIF,IAAI,GAAG,CAAtB,EAAwB;AAChBU,MAAAA,gBAAgB,GAAGI,UAAU,CAAC,YAAI;AAClCb,QAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACH,OAFgC,EAE9B,IAF8B,CAA7B;AAGP,KAJD,MAIM,IAAGE,QAAQ,IAAIF,IAAI,IAAI,CAAvB,EAAyB;AAC3Be,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAX,MAAAA,aAAa,CAAC,IAAD,CAAb;AACAF,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAJ,MAAAA,iBAAiB;AACpB;AAEJ,GAZQ,EAYN,CAACG,QAAD,EAAUF,IAAV,CAZM,CAAT;AAcA,sBACI,QAAC,iBAAD,CAAmB,QAAnB;AACA,IAAA,KAAK,EAAE;AACHW,MAAAA,cAAc,EAAdA,cADG;AAEHE,MAAAA,cAAc,EAAdA,cAFG;AAGHpB,MAAAA,SAAS,EAATA;AAHG,KADP;AAAA,cAOKK;AAPL;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GApDeD,kB;;KAAAA,kB","sourcesContent":["import { createContext, ReactNode, useContext, useEffect, useState } from \"react\";\r\nimport { ChallengesContext } from \"./ChallengesContext\";\r\n\r\ninterface CowntodownContextData{\r\n\r\n    resetCountdown: () => void,\r\n\r\n}\r\n\r\n\r\ninterface CowntodownProviderProps{\r\n    children: ReactNode\r\n}\r\n\r\nexport const CowntodownContext = createContext({} as CowntodownContextData);\r\n\r\nexport function CowntodownProvider( { children } : CowntodownProviderProps ){\r\n\r\n    //pegando valores de outros componets\r\n    const { startNewChallenge } = useContext(ChallengesContext);\r\n    \r\n    const [time,setTime] = useState(0.05 * 60);\r\n    const [isActive,setIsActive] = useState(false);\r\n    const [hasFinished, setHasFineshd] = useState(false);\r\n\r\n    const minutes = Math.floor(time / 60);\r\n    const seconds = time % 60;\r\n\r\n    let countdownTimeout: NodeJS.Timeout;\r\n\r\n    function resetCountdown(){\r\n\r\n        clearTimeout(countdownTimeout);\r\n        setIsActive(false);\r\n        setTime(0.05 * 60);\r\n\r\n    }\r\n\r\n    function startCountdown(){\r\n        setIsActive(true)\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(isActive && time > 0){\r\n                countdownTimeout = setTimeout(()=>{\r\n                setTime(time - 1);\r\n            }, 1000)\r\n        }else if(isActive && time == 0){\r\n            console.log('finalizou');\r\n            setHasFineshd(true);\r\n            setIsActive(false);\r\n            startNewChallenge();\r\n        }\r\n        \r\n    }, [isActive,time])\r\n\r\n    return(\r\n        <CowntodownContext.Provider \r\n        value={{\r\n            resetCountdown,\r\n            startCountdown,\r\n            useEffect,\r\n        }}\r\n        >\r\n            {children}\r\n        </CowntodownContext.Provider>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}